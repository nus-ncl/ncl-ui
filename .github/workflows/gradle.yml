# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
#
# Updated on July 2021
#

name: Java CI with Gradle

on:
  push:
    branches: [ DEV-1233 ]
    tags:
      - 'v*'
  pull_request:
    branches: [ DEV-1233 ]


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COMMIT_ID: ${{ env.GITHUB_SHA::8 }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Remove existing build cache
      run: rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock ; rm -fr $HOME/.gradle/caches/*/plugin-resolution/
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Install with Gradle
      run: ./gradlew --stacktrace printInfo
    - name: Build with Gradle
      run: ./gradlew --continue --stacktrace --profile build
#    - name: Run some code test
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#      run: ./gradlew --stacktrace -Djdk.tls.client.protocols="TLSv1,TLSv1.1,TLSv1.2" sonarqube jacocoTestReport coveralls
    - name: Publish package
      run: ./gradlew publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#    - uses: actions/upload-artifact@v2
#      with:
#        name: jar
#        path: build/libs
    - name: Add COMMIT_ID env property
      run: env
#        echo "COMMIT_ID=`echo ${GITHUB_SHA} | cut -c1-8`"
#        echo '1'
#        echo $GITHUB_ENV
#        echo '2'
#        env
#        echo '3'
#        echo GITHUB_SHA
#        echo '4'
#        echo $GITHUB_SHA
#        echo '5'
#        echo ${GITHUB_SHA}
#        echo '6'
#        echo ${{ GITHUB_SHA }}
#        echo '7'
#        echo ${{ github.sha }}
#        echo '8'
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.GITHUB_SHA }}
        release_name: Release-${{ env.GITHUB_SHA }}
        draft: false
        prerelease: false
    - name: print
      run: ls -al build/libs/
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/libs/web-service-${{ COMMIT_ID }}.jar
        asset_name: web-service-${{ COMMIT_ID }}.jar
        asset_content_type: application/jar